{
  "address": "0x378f110af67faD24a7e4311D6B33c81d5810B089",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "ONE_HUNDRED_PERCENT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "tokenIn",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "tokenOut",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenInAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tokenOutAmount",
          "type": "uint256"
        }
      ],
      "name": "isPriceValid",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "setPriceOf",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "testPrices",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x0eecf3e396d5809a79c0228f335df0b65b46c885ff715a16e9449da9e03dd863",
  "receipt": {
    "to": null,
    "from": "0x7A3876E516d7F221Eb4791410F7434F20f01773A",
    "contractAddress": "0x378f110af67faD24a7e4311D6B33c81d5810B089",
    "transactionIndex": 79,
    "gasUsed": "428191",
    "logsBloom": "0x
    "blockHash": "0x302b345876fec5459f079f27884f6f65d8b62b76a82f6274258fdb638e1c6a5b",
    "transactionHash": "0x0eecf3e396d5809a79c0228f335df0b65b46c885ff715a16e9449da9e03dd863",
    "logs": [],
    "blockNumber": 7739894,
    "cumulativeGasUsed": "21896616",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "640f97803a4ab45f8578802f427ddbd9",
  "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ONE_HUNDRED_PERCENT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenInAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenOutAmount\",\"type\":\"uint256\"}],\"name\":\"isPriceValid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"setPriceOf\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"testPrices\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Oracle.sol\":\"Oracle\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"contracts/Oracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ncontract Oracle {\\n  uint constant public ONE_HUNDRED_PERCENT = 100;\\n\\n  mapping(address => uint) public testPrices;\\n\\n  constructor(){\\n    // easy set prices\\n    testPrices[0x6bAd8529bB6530A7EE00BD55A62c507ab2dC6AE8] = 1;\\n    testPrices[0x7F25168fd1668691546Aa994b90A124b94d38998] = 2000;\\n  }\\n\\n  function setPriceOf(address _token, uint _price) external {\\n    testPrices[_token] = _price;\\n  }\\n\\n  function isPriceValid(IERC20 tokenIn, IERC20 tokenOut, uint256 tokenInAmount, uint256 tokenOutAmount) external view returns(bool){\\n    uint totalInUSD;\\n    totalInUSD += (tokenInAmount * testPrices[address(tokenIn)]);\\n    \\n    uint usdReqOut = testPrices[address(tokenOut)] * tokenOutAmount;\\n    require(totalInUSD > 0 && usdReqOut > 0, \\\"Cannot have 0\\\");\\n    return(totalInUSD <= usdReqOut);\\n  }\\n\\n}\",\"keccak256\":\"0x6a6bd8f858d5239b12bf47cd372352a7b17700d7cc148d15c3562311407f85d4\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506001600080736bad8529bb6530a7ee00bd55a62c507ab2dc6ae873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506107d0600080737f25168fd1668691546aa994b90a124b94d3899873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506105f3806100d16000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630f6322c4146100515780632529bcde1461006d578063dd0081c71461009d578063ec062b75146100bb575b600080fd5b61006b600480360381019061006691906102ef565b6100eb565b005b6100876004803603810190610082919061036d565b610132565b60405161009491906103ef565b60405180910390f35b6100a5610239565b6040516100b29190610419565b60405180910390f35b6100d560048036038101906100d09190610434565b61023e565b6040516100e29190610419565b60405180910390f35b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b6000806000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548461017f9190610490565b8161018a91906104ea565b90506000836000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546101d89190610490565b90506000821180156101ea5750600081115b610229576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102209061059d565b60405180910390fd5b8082111592505050949350505050565b606481565b60006020528060005260406000206000915090505481565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102868261025b565b9050919050565b6102968161027b565b81146102a157600080fd5b50565b6000813590506102b38161028d565b92915050565b6000819050919050565b6102cc816102b9565b81146102d757600080fd5b50565b6000813590506102e9816102c3565b92915050565b6000806040838503121561030657610305610256565b5b6000610314858286016102a4565b9250506020610325858286016102da565b9150509250929050565b600061033a8261027b565b9050919050565b61034a8161032f565b811461035557600080fd5b50565b60008135905061036781610341565b92915050565b6000806000806080858703121561038757610386610256565b5b600061039587828801610358565b94505060206103a687828801610358565b93505060406103b7878288016102da565b92505060606103c8878288016102da565b91505092959194509250565b60008115159050919050565b6103e9816103d4565b82525050565b600060208201905061040460008301846103e0565b92915050565b610413816102b9565b82525050565b600060208201905061042e600083018461040a565b92915050565b60006020828403121561044a57610449610256565b5b6000610458848285016102a4565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061049b826102b9565b91506104a6836102b9565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156104df576104de610461565b5b828202905092915050565b60006104f5826102b9565b9150610500836102b9565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561053557610534610461565b5b828201905092915050565b600082825260208201905092915050565b7f43616e6e6f742068617665203000000000000000000000000000000000000000600082015250565b6000610587600d83610540565b915061059282610551565b602082019050919050565b600060208201905081810360008301526105b68161057a565b905091905056fea264697066735822122097b52aa806fcc3bf36b95dac5a8b593ebd96351e3562b6e55588cc2fa467643e64736f6c634300080e0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c80630f6322c4146100515780632529bcde1461006d578063dd0081c71461009d578063ec062b75146100bb575b600080fd5b61006b600480360381019061006691906102ef565b6100eb565b005b6100876004803603810190610082919061036d565b610132565b60405161009491906103ef565b60405180910390f35b6100a5610239565b6040516100b29190610419565b60405180910390f35b6100d560048036038101906100d09190610434565b61023e565b6040516100e29190610419565b60405180910390f35b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b6000806000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548461017f9190610490565b8161018a91906104ea565b90506000836000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546101d89190610490565b90506000821180156101ea5750600081115b610229576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102209061059d565b60405180910390fd5b8082111592505050949350505050565b606481565b60006020528060005260406000206000915090505481565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102868261025b565b9050919050565b6102968161027b565b81146102a157600080fd5b50565b6000813590506102b38161028d565b92915050565b6000819050919050565b6102cc816102b9565b81146102d757600080fd5b50565b6000813590506102e9816102c3565b92915050565b6000806040838503121561030657610305610256565b5b6000610314858286016102a4565b9250506020610325858286016102da565b9150509250929050565b600061033a8261027b565b9050919050565b61034a8161032f565b811461035557600080fd5b50565b60008135905061036781610341565b92915050565b6000806000806080858703121561038757610386610256565b5b600061039587828801610358565b94505060206103a687828801610358565b93505060406103b7878288016102da565b92505060606103c8878288016102da565b91505092959194509250565b60008115159050919050565b6103e9816103d4565b82525050565b600060208201905061040460008301846103e0565b92915050565b610413816102b9565b82525050565b600060208201905061042e600083018461040a565b92915050565b60006020828403121561044a57610449610256565b5b6000610458848285016102a4565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061049b826102b9565b91506104a6836102b9565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156104df576104de610461565b5b828202905092915050565b60006104f5826102b9565b9150610500836102b9565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561053557610534610461565b5b828201905092915050565b600082825260208201905092915050565b7f43616e6e6f742068617665203000000000000000000000000000000000000000600082015250565b6000610587600d83610540565b915061059282610551565b602082019050919050565b600060208201905081810360008301526105b68161057a565b905091905056fea264697066735822122097b52aa806fcc3bf36b95dac5a8b593ebd96351e3562b6e55588cc2fa467643e64736f6c634300080e0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 194,
        "contract": "contracts/Oracle.sol:Oracle",
        "label": "testPrices",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}